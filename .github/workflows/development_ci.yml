name: Development CI

on:
  push:
    branches:
      - main
      - tests
  pull_request:
  workflow_dispatch:

env:
  DB_HOST: localhost
  DB_PORT: 5432
  DB_NAME: devdb
  DB_USER: dev_user
  DB_PASSWORD: dev_fleet_123
  DB_NETWORK: dev_network
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/openfleetpilot:latest

jobs:
  test:
    name: Run Application Test
    runs-on: ubuntu-22.04

    steps:      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Start services
        run: docker compose up --abort-on-container-exit

      - name: Wait for services to be healthy
        run: |
          timeout 60 bash -c '
            until [[ "$(docker inspect -f {{.State.Health.Status}} openfleetpilot_postgres)" == "healthy" && \
                     "$(docker inspect -f {{.State.Health.Status}} openfleetpilot_redis)" == "healthy" ]]; do
              echo "Waiting for services..."
              sleep 5
            done
          '

      - name: Build the app inside container
        run: |
          docker exec open_fleet_pilot bash -c "apt-get update && \
            DEBIAN_FRONTEND=noninteractive apt-get install -y cmake build-essential && \
            mkdir -p build && cd build && cmake .. && make -j$(nproc)"


      - name: Run integration tests
        run: |
          docker exec open_fleet_pilot ./build/fms || {
            echo "Tests failed"
            docker compose logs
            exit 1
          }

      - name: Shutdown services
        if: always()
        run: docker compose down -v

  lint:
    name: code style check
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Clang-Format
        run: sudo apt-get install -y clang-format

      - name: Run clang-format check
        run: |
          find src -name "*.cpp" -o -name "*.hpp" | xargs clang-format -Werror